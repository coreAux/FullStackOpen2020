{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","axios","get","then","r","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initalNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","err","setTimeout","toggleImportanceOf","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","placeholder","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAaeA,G,MAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,SCE3BK,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAGF,qBAAKJ,UAAU,QAAf,SAAwBI,KCN3BC,EAAU,kCAiBD,EAfA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAACC,GAAD,OAAOA,EAAEC,SAahB,EAVA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAACC,GAAD,OAAOA,EAAEC,SAQhB,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAACC,GAAD,OAAOA,EAAEC,SCRzBK,EAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,2GA0FSC,EAnFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,0BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAOhBC,qBAAU,WACRC,IAAqBvB,MAAK,SAACwB,GACzBT,EAASS,QAEV,IAEH,IAmBMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACtC,GAAD,OAAUA,EAAKG,aAsBlE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASwB,IACvB,qBAAK1B,QAAS,kBAAMyB,GAAYD,IAAhC,SACE,2CAAcA,EAAU,YAAc,WAExC,6BACGO,EAAYE,KAAI,SAACvC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAhCD,SAACgB,GAC1B,IAAMjB,EAAO0B,EAAMc,MAAK,SAACC,GAAD,OAAOA,EAAExB,KAAOA,KAClCyB,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDgC,EACUlB,EAAIyB,GACX9B,MAAK,SAAC+B,GACLhB,EAASD,EAAMa,KAAI,SAACvC,GAAD,OAAWA,EAAKiB,KAAOA,EAAKjB,EAAO2C,SAEvDC,OAAM,SAACC,GACNZ,EAAgB,SAAD,OACJjC,EAAKK,QADD,sCAGfyC,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACG,GAAD,OAAOA,EAAExB,KAAOA,SAgBV8B,CAAmB/C,EAAKiB,MAF3CjB,EAAKiB,SAMhB,uBAAM+B,SAzDM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAa,CACjB9C,QAASuB,EACTwB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG7BrB,EAAmBgB,GAAYvC,MAAK,SAAC+B,GACnChB,EAASD,EAAM+B,OAAOd,IACtBd,EAAW,QA+CX,UACE,uBACE6B,MAAO9B,EACP+B,YAAY,oBACZC,SA9CiB,SAACX,GACxBpB,EAAWoB,EAAEY,OAAOH,UA+ChB,wBAAQI,KAAK,SAAb,qBAEF,cAAC,EAAD,QChGNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b13e6bf2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"http://localhost:3001/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((r) => r.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((r) => r.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((r) => r.data);\n};\n\nexport default {\n  getAll,\n  create,\n  update,\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport noteService from \"./services/notes\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened...\");\n\n  // NOTE: NotesHook - get the notes from our db\n  useEffect(() => {\n    noteService.getAll().then((initalNotes) => {\n      setNotes(initalNotes);\n    });\n  }, []);\n\n  const addNote = (e) => {\n    e.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  // Handlers\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)));\n      })\n      .catch((err) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div onClick={() => setShowAll(!showAll)}>\n        <button>Show {showAll ? \"important\" : \"all\"}</button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          placeholder=\"Note goes here...\"\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}